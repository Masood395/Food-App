/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.96
 * Generated at: 2024-11-20 17:57:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.tap.cartitem.CartItem;

public final class cart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.tap.cartitem.CartItem");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Your Cart</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        /* General Styling */\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Arial', sans-serif;\r\n");
      out.write("            background: linear-gradient(135deg, #f5f7fa, #c3cfe2);\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            min-height: 100vh;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Header Styling */\r\n");
      out.write("        header {\r\n");
      out.write("            background: #3B5998;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            position: relative;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        header h1 {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-size: 2.5em;\r\n");
      out.write("            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Back Button Styling */\r\n");
      out.write("        .back-button {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            top: 20px;\r\n");
      out.write("            left: 20px;\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            background: #FF5722;\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-size: 1em;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 50px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background 0.3s ease;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .back-button:hover {\r\n");
      out.write("            background: #E64A19;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Clear Cart Button Styling */\r\n");
      out.write("        .clear-cart-button {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            top: 20px;\r\n");
      out.write("            right: 20px;\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            background: #FF0000;\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-size: 1em;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 50px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background 0.3s ease;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .clear-cart-button:hover {\r\n");
      out.write("            background: #cc0000;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Cart Container */\r\n");
      out.write("        .cart-container {\r\n");
      out.write("            flex: 1;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("            gap: 20px;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            max-width: 1200px;\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("            padding-bottom: 80px; /* To make space for the footer */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Cart Item Card */\r\n");
      out.write("        .cart-item {\r\n");
      out.write("            flex: 1 1 300px;\r\n");
      out.write("            background: #fff;\r\n");
      out.write("            border-radius: 15px;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("            max-width: 400px;\r\n");
      out.write("            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);\r\n");
      out.write("            transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n");
      out.write("            position: relative;\r\n");
      out.write("            animation: slideIn 0.5s ease forwards;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes slideIn {\r\n");
      out.write("            from { opacity: 0; transform: translateY(20px); }\r\n");
      out.write("            to { opacity: 1; transform: translateY(0); }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .cart-item:hover {\r\n");
      out.write("            transform: translateY(-5px);\r\n");
      out.write("            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .cart-item img {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 200px;\r\n");
      out.write("            object-fit: cover;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .cart-item-details {\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .cart-item h2 {\r\n");
      out.write("            font-size: 1.5em;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .cart-item p {\r\n");
      out.write("            font-size: 1em;\r\n");
      out.write("            margin: 5px 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .price {\r\n");
      out.write("            font-size: 1.2em;\r\n");
      out.write("            color: #FF5722;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Quantity Selector Styling */\r\n");
      out.write("        .quantity-selector select {\r\n");
      out.write("            padding: 5px;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            font-size: 1em;\r\n");
      out.write("            width: 70px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Button Styles */\r\n");
      out.write("        .button-container {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .remove-button {\r\n");
      out.write("            background: #FF5722;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            font-size: 1em;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background 0.3s ease;\r\n");
      out.write("            flex: 1;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .remove-button:hover {\r\n");
      out.write("            background: #E64A19;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Fixed Footer for Total and Checkout */\r\n");
      out.write("        .footer-section {\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            bottom: 0;\r\n");
      out.write("            left: 0;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            background: #fff;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            box-shadow: 0 -4px 10px rgba(0, 0, 0, 0.15);\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            font-size: 1.2em;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            z-index: 10;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .footer-section .total-price {\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .checkout-button {\r\n");
      out.write("            background: #28a745;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            font-size: 1em;\r\n");
      out.write("            border-radius: 50px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background 0.3s ease;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n");
      out.write("            margin-right: 30px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .checkout-button:hover {\r\n");
      out.write("            background: #218838;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("    <h1>Your Cart</h1>\r\n");
      out.write("    <button class=\"back-button\" onclick=\"goBack()\">Back</button>\r\n");
      out.write("    <script>\r\n");
      out.write("        function goBack() {\r\n");
      out.write("            const previousPage = document.referrer;\r\n");
      out.write("            if (previousPage.includes(\"getMenu.jsp\")) {\r\n");
      out.write("                window.location.href = \"getMenu.jsp\";\r\n");
      out.write("            } else if (previousPage.includes(\"home.jsp\")) {\r\n");
      out.write("                window.location.href = \"home.jsp\";\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("    <form action=\"clearCart\" method=\"post\" style=\"display:inline;\">\r\n");
      out.write("        <button type=\"submit\" class=\"clear-cart-button\">Clear Cart</button>\r\n");
      out.write("    </form>\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("<div class=\"cart-container\">\r\n");
      out.write("    ");
 
        Map<Integer, CartItem> cart = (Map<Integer, CartItem>) session.getAttribute("cart");
        double total = 0;
        if (cart != null && !cart.isEmpty()) {
            for (CartItem item : cart.values()) {
                // Convert USD to INR by multiplying the price by 10 and round it
                double itemPriceInINR = Math.round(item.getPrice() * 10);
                double itemTotal = itemPriceInINR * item.getQuantity();
                total += itemTotal;
    
      out.write("\r\n");
      out.write("        <div class=\"cart-item\">\r\n");
      out.write("            <img src=\"");
      out.print( item.getImage() );
      out.write("\" alt=\"");
      out.print( item.getName() );
      out.write("\">\r\n");
      out.write("            <div class=\"cart-item-details\">\r\n");
      out.write("                <h2>");
      out.print( item.getName() );
      out.write("</h2>\r\n");
      out.write("                <p>Restaurant: ");
      out.print( item.getRestaurant() );
      out.write("</p>\r\n");
      out.write("                <p class=\"price\">₹");
      out.print( itemPriceInINR );
      out.write("</p>\r\n");
      out.write("                <p>Quantity: ");
      out.print( item.getQuantity() );
      out.write("</p>\r\n");
      out.write("                <p>Subtotal: ₹");
      out.print( Math.round(itemTotal) );
      out.write("</p>\r\n");
      out.write("                <div class=\"quantity-selector\">\r\n");
      out.write("                    <form action=\"updateCart\" method=\"post\">\r\n");
      out.write("                        <select name=\"quantity\" onchange=\"this.form.submit()\">\r\n");
      out.write("                            ");
 for (int i = 1; i <= 10; i++) { 
      out.write("\r\n");
      out.write("                                <option value=\"");
      out.print( i );
      out.write('"');
      out.write(' ');
      out.print( i == item.getQuantity() ? "selected" : "" );
      out.write('>');
      out.print( i );
      out.write("</option>\r\n");
      out.write("                            ");
 } 
      out.write("\r\n");
      out.write("                        </select>\r\n");
      out.write("                        <input type=\"hidden\" name=\"itemId\" value=\"");
      out.print( item.getItemId() );
      out.write("\">\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"button-container\">\r\n");
      out.write("                    <form action=\"removeItem\" method=\"post\">\r\n");
      out.write("                        <input type=\"hidden\" name=\"itemId\" value=\"");
      out.print( item.getItemId() );
      out.write("\">\r\n");
      out.write("                        <button type=\"submit\" class=\"remove-button\">Remove</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    ");
 
            }
    
      out.write("\r\n");
      out.write("    ");
 
        } else { 
    
      out.write("\r\n");
      out.write("        <p>Your cart is empty.</p>\r\n");
      out.write("    ");
 
        } 
    
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
 if (cart != null && !cart.isEmpty()) { 
      out.write("\r\n");
      out.write("    <div class=\"footer-section\">\r\n");
      out.write("        <span class=\"total-price\">Total: ₹");
      out.print( String.format("%.2f", total) );
      out.write("</span>\r\n");
      out.write("        ");
 session.setAttribute("cartTotal", total); 
      out.write("\r\n");
      out.write("        <a href=\"checkout.jsp\" class=\"checkout-button\">Proceed to Checkout</a>\r\n");
      out.write("    </div>\r\n");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write(" ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
