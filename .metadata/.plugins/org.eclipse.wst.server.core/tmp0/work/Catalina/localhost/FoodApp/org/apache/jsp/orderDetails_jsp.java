/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.96
 * Generated at: 2024-11-20 20:07:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.tap.orderitemdao.OrderItemDAO;
import com.tap.orderitemdaoimpl.OrderItemDAOImpl;
import com.tap.orderitem.OrderItem;
import com.tap.menudao.MenuDAO;
import com.tap.menudaoimpl.MenuDaoImpl;
import com.tap.menu.Menu;

public final class orderDetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(10);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.tap.menudao.MenuDAO");
    _jspx_imports_classes.add("com.tap.orderitemdao.OrderItemDAO");
    _jspx_imports_classes.add("com.tap.menu.Menu");
    _jspx_imports_classes.add("com.tap.orderitem.OrderItem");
    _jspx_imports_classes.add("com.tap.orderitemdaoimpl.OrderItemDAOImpl");
    _jspx_imports_classes.add("com.tap.menudaoimpl.MenuDaoImpl");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Order Details</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap 5 CSS -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    /* Custom Styling */\r\n");
      out.write("    body {\r\n");
      out.write("        font-family: 'Arial', sans-serif;\r\n");
      out.write("        background-color: #f8f9fa;\r\n");
      out.write("        color: #333;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .container {\r\n");
      out.write("        max-width: 1200px;\r\n");
      out.write("        margin-top: 30px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .table {\r\n");
      out.write("        border-radius: 10px;\r\n");
      out.write("        overflow: hidden;\r\n");
      out.write("        background-color: white;\r\n");
      out.write("        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .table th, .table td {\r\n");
      out.write("        padding: 15px;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .table th {\r\n");
      out.write("        background-color: #007bff;\r\n");
      out.write("        color: white;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .table td {\r\n");
      out.write("        background-color: #f9f9f9;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .table-hover tbody tr:hover {\r\n");
      out.write("        background-color: #f1f1f1;\r\n");
      out.write("        transition: background-color 0.3s ease;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    h2 {\r\n");
      out.write("        color: #007bff;\r\n");
      out.write("        margin-bottom: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .order-summary {\r\n");
      out.write("        background-color: #fff;\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("        border-radius: 10px;\r\n");
      out.write("        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .order-summary h3 {\r\n");
      out.write("        color: #333;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .order-summary p {\r\n");
      out.write("        font-size: 1.2em;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .back-btn {\r\n");
      out.write("        margin-top: 20px;\r\n");
      out.write("        background-color: #6c757d;\r\n");
      out.write("        color: white;\r\n");
      out.write("        border: none;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        padding: 10px 20px;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .back-btn:hover {\r\n");
      out.write("        background-color: #5a6268;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .fade-in {\r\n");
      out.write("        animation: fadeIn 1s ease-in-out;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    @keyframes fadeIn {\r\n");
      out.write("        from {\r\n");
      out.write("            opacity: 0;\r\n");
      out.write("        }\r\n");
      out.write("        to {\r\n");
      out.write("            opacity: 1;\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container fade-in\">\r\n");
      out.write("    <!-- Order Details Header -->\r\n");
      out.write("    <h2>Order Details</h2>\r\n");
      out.write("\r\n");
      out.write("    <!-- Order Item Table -->\r\n");
      out.write("    <div class=\"order-summary\">\r\n");
      out.write("        <table class=\"table table-hover\">\r\n");
      out.write("            <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Menu Name</th>\r\n");
      out.write("                    <th>Quantity</th>\r\n");
      out.write("                    <th>Sub Total</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("                ");
 
                    String orderIdParam = request.getParameter("orderId");
                    int oid = 0;

                    // Check if the orderID is valid
                    if (orderIdParam != null && !orderIdParam.isEmpty()) {
                        oid = Integer.parseInt(orderIdParam); // Convert to integer
                    }

                    OrderItemDAO oidao = new OrderItemDAOImpl();
                    List<OrderItem> oiList = oidao.getOrderItem(oid);

                    // Loop through the order items and display them
                    for(OrderItem oi : oiList) {
                        MenuDAO mdao = new MenuDaoImpl();
                        Menu m = mdao.getById(oi.getMenuId());
                
      out.write("\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>");
      out.print( m.getMenuName() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( oi.getQuantity() );
      out.write("</td>\r\n");
      out.write("                    <td>$");
      out.print( String.format("%.2f", oi.getItemTotal()) );
      out.write("</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Back to Previous Page Button -->\r\n");
      out.write("    <button class=\"back-btn\" onclick=\"window.history.back();\">\r\n");
      out.write("        <i class=\"fas fa-arrow-left\"></i> Back to Orders\r\n");
      out.write("    </button>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap 5 JavaScript -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
